using UnityEngine;
using System.Collections;

public class SoundEffectsHelper : MonoBehaviour {

    public static SoundEffectsHelper Instance;

    public AudioClip explosionSound;
    public AudioClip fireSound;
    public AudioClip hitSound;
    public AudioClip locationChangeSound;
    public AudioClip playerDeathSound;
    public AudioClip enemyFireSound;
    public AudioClip pickupSound;
    public AudioClip questCompletedSound;
    public AudioClip shieldHitSound;

    // GUI
    public AudioClip buttonHoverSound;
    public AudioClip buttonClickSound;
    public AudioClip startSound;

    void Awake()
    {
        if (Instance != null)
        {
            Debug.LogError("Multiple instances of SoundEffectsHelper");
        }

        Instance = this;
    }

    public void MakeExplosionSound()
    {
        MakeSound(explosionSound);
    }

    public void MakeFireSound()
    {
        MakeSound(fireSound);
    }

    public void MakeHitSound()
    {
        MakeSound(hitSound);
    }

    public void MakeEnemyFireSound()
    {
        MakeSound(enemyFireSound);
    }

    public void MakeLocationChangeSound()
    {
        MakeSound(locationChangeSound);
    }

    public void MakePlayerDeathSound()
    {
        MakeSound(playerDeathSound);
    }

    public void MakePickupSound()
    {
        MakeSound(pickupSound);
    }

    public void MakeQuestCompletedSound()
    {
        MakeSound(questCompletedSound);
    }

    public void MakeShieldHitSound()
    {
        MakeSound(shieldHitSound);
    }

    public void MakeButtonHoverSound()
    {
        MakeSound(buttonHoverSound);
    }

    public void MakeButtonClickSound()
    {
        MakeSound(buttonClickSound);
    }

    public void MakeStartButtonSound()
    {
        MakeSound(startSound);
    }




    private void MakeSound(AudioClip originalClip)
    {
        AudioSource.PlayClipAtPoint(originalClip, transform.position);
    }

	// Use this for initialization
	void Start ()
    {
	
	}
	
	// Update is called once per frame
	void Update ()
    {
	
	}
}
